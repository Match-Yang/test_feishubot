name: prepare_pr_info

on:
  pull_request_target:
    types: 
      - assigned
      - opened
      - synchronize
      - reopened
      - closed
      - review_requested
      - converted_to_draft
      - ready_for_review
      - review_request_removed
  pull_request_review:
    types: [submitted, edited, dismissed]
  issue_comment:
    types: [created, edited, deleted]

jobs:
  prepare:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Prepare PR info
        id: pr_info
        run: |
          # 准备基础信息
          echo "event_type=${{ github.event_name }}" >> pr_info.txt
          echo "action=${{ github.event.action }}" >> pr_info.txt
          
          # 根据不同事件类型获取PR信息
          if [[ "${{ github.event_name }}" == "issue_comment" && "${{ github.event.issue.pull_request != '' }}" == "true" ]]; then
            PR_NUMBER=$(echo "${{ github.event.issue.pull_request.url }}" | awk -F'/' '{print $NF}')
            PR_INFO=$(gh api "repos/${{ github.repository }}/pulls/${PR_NUMBER}")
            echo "pr_title=${{ github.event.issue.title }}" >> pr_info.txt
            echo "pr_url=${{ github.event.issue.pull_request.html_url }}" >> pr_info.txt
            echo "comment_body=${{ github.event.comment.body }}" >> pr_info.txt
            echo "comment_user=${{ github.event.comment.user.login }}" >> pr_info.txt
          else
            echo "pr_title=${{ github.event.pull_request.title }}" >> pr_info.txt
            echo "pr_url=${{ github.event.pull_request.html_url }}" >> pr_info.txt
            echo "pr_body=${{ github.event.pull_request.body }}" >> pr_info.txt
            echo "pr_creator=${{ github.event.pull_request.user.login }}" >> pr_info.txt
            echo "pr_merged=${{ github.event.pull_request.merged }}" >> pr_info.txt
          fi
          
          # 如果是review事件,添加review信息
          if [[ "${{ github.event_name }}" == "pull_request_review" ]]; then
            echo "review_body=${{ github.event.review.body }}" >> pr_info.txt
            echo "review_state=${{ github.event.review.state }}" >> pr_info.txt
            echo "reviewer=${{ github.event.review.user.login }}" >> pr_info.txt
          fi

      - name: Get changed files
        if: github.event.pull_request
        run: |
          PR_NUMBER="${{ github.event.pull_request.number }}"
          if [[ -n "$PR_NUMBER" ]]; then
            changed_files=$(gh api "repos/${{ github.repository }}/pulls/${PR_NUMBER}/files" --jq '.[].filename')
            echo "$changed_files" > changed_files.txt
          fi
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Upload PR info
        uses: actions/upload-artifact@v4
        with:
          name: pr-info
          path: |
            pr_info.txt
            changed_files.txt